[{"body":"Background and Goal Today, data-based projects have a critical impact on any business. The amount of historical information available, the different data sources that enrich this information, and the ability to compute and execute advanced techniques, are some of the indicators that demonstrate why this branch of technology has become one of the main actors in the stage. For approximately four years, the evolution in terms of technological framework and algorithms has been overwhelming. A lot of new technological approaches and improvements in the state-of-the-art solutions and methods applied have helped to push this field to be more controlled, established and mature. Much of the responsibility is held by software engineering, where methodologies and patterns have been adopted when designing artificial intelligence solutions.\nHowever, in order to achieve total technological maturity, there are still many gaps in the methodologies inherited from software engineering that need to be filled in. Although total technological maturity is very ambitious, there are improvements and changes that can be adopted in the medium term. With that goal in mind, the Science Toolkit has been developed following this idea of ​moving to the next level of maturity.\nThe Science Toolkit goal can be defined in one sentence as:\n“To offer a standard environment that covers the technological and methodological needs of a data team in an artificial intelligence project.”\nWhat is the Science Toolkit? As mentioned in the previous section, the Science Toolkit is a solution that offers a standard environment to cover the technological and methodological needs of a data team working in any artificial intelligence project, allowing the data scientists to focus on gaining value and new insights from the data.\nRegarding the technological needs, the science Toolkit is composed of a suite with the latest frameworks and libraries in the same environment, as well as, its own engineering approaches such as data versioning, model versioning, continuous integration, dashboards for data visualization, etc. In terms of the methodology, the Science Toolkit is designed to develop experiments guided by hypotheses, so that the control is greater and the collaboration between team members is easier and more effective.\nScience Toolkit Workflow Applying the proper methodology in artificial intelligence projects is a challenging task. There is a lot of literature covering the main phases and levels of a data project. Nowadays the definition of the right workflow to face real data projects is pretty similar in the main organizations working in this area. The Science Toolkit is designed to provide the right tools and the right workflow to help A.I. researchers and practitioners to work applying these methodology standards. For any data project, the first step would be to design a set of initial hypotheses that will guide the work. Following the hypotheses definition, an exploratory data analysis is performed in some cases together with the development of some preliminary models, to gain data knowledge and starting to get some insights regarding the hypotheses.\nWith this objective in mind, the Science Toolkit offers a data-studio based on open source technologies to perform these tasks easily. It is important to take into account that along the entire project, a volume to persist temporary data or artifacts is necessary for good project development.\nOnce the hypotheses are proven and the data analysis returns a promising output, it is advisable to adopt software engineer methodologies or patterns to develop the solution in the correct way. Some good practices such as ATDD, code decoupling or unit tests are examples that can be useful to control that the project evolves in the right path. At this point, a code editor is mandatory to facilitate development. Of course, all of the generated code is maintained through some code version technology (i.e: git).\nAnother useful adoption is continuous integration and execution. Having the experiments totally automated is a win for the project because it allows testing of different configurations for the executions in favor of having the best possible solution. Some of the benefits of applying this approach are automated execution, saved metrics, charts generation or artifacts serialization.\nAs it is important to not lose sight of the useful information that we need to store related to the experiments, a solution for managing this information as useful metrics is needed as well as a database to store it.\nLast but not least, a dashboard is mandatory to support the analysis during the exploratory data analysis phase and for checking the results of the experiments executed.\nThe Science Toolkit covers with open source technologies all the needs for the different phases highlighted in the previous paragraphs. The aim of this is to provide a suite of tools and technological frameworks to work in data projects, as well as, the right workflow and methodology to help artificial intelligence researchers and practitioners to obtain the maximum value from each phase of the project.\n Where should I go next? Give your users next steps from the Overview. For example:\n Getting Started: Get started with $project Examples: Check out some example code!  ","excerpt":"Background and Goal Today, data-based projects have a critical impact on any business. The amount of …","ref":"/science-toolkit/docs/overview/","title":"Overview"},{"body":" This is a placeholder page that shows you how to use this template site.\n Information in this section helps your user try your project themselves.\n  What do your users need to do to start using your project? This could include downloading/installation instructions, including any prerequisites or system requirements.\n  Introductory “Hello World” example, if appropriate. More complex tutorials should live in the Tutorials section.\n  Consider using the headings below for your getting started page. You can delete any that are not applicable to your project.\nPrerequisites Are there any system requirements for using your project? What languages are supported (if any)? Do users need to already have any software or tools installed?\nInstallation Where can your user find your project code? How can they install it (binaries, installable package, build from source)? Are there multiple options/versions they can install and how should they choose the right one for them?\nSetup Is there any initial setup users need to do after installation to try your project?\nTry it out! Can your users test their installation, for example by running a commmand or deploying a Hello World example?\n","excerpt":"This is a placeholder page that shows you how to use this template site.\n Information in this …","ref":"/science-toolkit/docs/getting-started/","title":"Getting Started"},{"body":" This is a placeholder page that shows you how to use this template site.\n For many projects, users may not need much information beyond the information in the Overview, so this section is optional. However if there are areas where your users will need a more detailed understanding of a given term or feature in order to do anything useful with your project (or to not make mistakes when using it) put that information in this section. For example, you may want to add some conceptual pages if you have a large project with many components and a complex architecture.\nRemember to focus on what the user needs to know, not just what you think is interesting about your project! If they don’t need to understand your original design decisions to use or contribute to the project, don’t put them in, or include your design docs in your repo and link to them. Similarly, most users will probably need to know more about how features work when in use rather than how they are implemented. Consider a separate architecture page for more detailed implementation and system design information that potential project contributors can consult.\n","excerpt":"This is a placeholder page that shows you how to use this template site.\n For many projects, users …","ref":"/science-toolkit/docs/concepts/","title":"Concepts"},{"body":"","excerpt":"","ref":"/science-toolkit/docs/installation/","title":"Installation"},{"body":" These basic sample guidelines assume that your Docsy site is deployed using Netlify and your files are stored in GitHub. You can use the guidelines \u0026ldquo;as is\u0026rdquo; or adapt them with your own instructions: for example, other deployment options, information about your doc project\u0026rsquo;s file structure, project-specific review guidelines, versioning guidelines, or any other information your users might find useful when updating your site. Kubeflow has a great example.\nDon\u0026rsquo;t forget to link to your own doc repo rather than our example site! Also make sure users can find these guidelines from your doc repo README: either add them there and link to them from this page, add them here and link to them from the README, or include them in both locations.\n We use Hugo to format and generate our website, the Docsy theme for styling and site structure, and Netlify to manage the deployment of the site. Hugo is an open-source static site generator that provides us with templates, content organisation in a standard directory structure, and a website generation engine. You write the pages in Markdown (or HTML if you want), and Hugo wraps them up into a website.\nAll submissions, including submissions by project members, require review. We use GitHub pull requests for this purpose. Consult GitHub Help for more information on using pull requests.\nQuick start with Netlify Here\u0026rsquo;s a quick guide to updating the docs. It assumes you\u0026rsquo;re familiar with the GitHub workflow and you\u0026rsquo;re happy to use the automated preview of your doc updates:\n Fork the Science Toolkits repo on GitHub. Make your changes and send a pull request (PR). If you\u0026rsquo;re not yet ready for a review, add \u0026ldquo;WIP\u0026rdquo; to the PR name to indicate it\u0026rsquo;s a work in progress. (Don\u0026rsquo;t add the Hugo property \u0026ldquo;draft = true\u0026rdquo; to the page front matter, because that prevents the auto-deployment of the content preview described in the next point.) Wait for the automated PR workflow to do some checks. When it\u0026rsquo;s ready, you should see a comment like this: deploy/netlify — Deploy preview ready! Click Details to the right of \u0026ldquo;Deploy preview ready\u0026rdquo; to see a preview of your updates. Continue updating your doc and pushing your changes until you\u0026rsquo;re happy with the content. When you\u0026rsquo;re ready for a review, add a comment to the PR, and remove any \u0026ldquo;WIP\u0026rdquo; markers.  Updating a single page If you\u0026rsquo;ve just spotted something you\u0026rsquo;d like to change while using the docs, Docsy has a shortcut for you:\n Click Edit this page in the top right hand corner of the page. If you don\u0026rsquo;t already have an up to date fork of the project repo, you are prompted to get one - click Fork this repository and propose changes or Update your Fork to get an up to date version of the project to edit. The appropriate page in your fork is displayed in edit mode. Follow the rest of the Quick start with Netlify process above to make, preview, and propose your changes.  Previewing your changes locally If you want to run your own local Hugo server to preview your changes as you work:\n  Follow the instructions in Getting started to install Hugo and any other tools you need. You\u0026rsquo;ll need at least Hugo version 0.45 (we recommend using the most recent available version), and it must be the extended version, which supports SCSS.\n  Fork the Science Toolkits repo repo into your own project, then create a local copy using git clone. Don’t forget to use --recurse-submodules or you won’t pull down some of the code you need to generate a working site.\ngit clone --recurse-submodules --depth 1 https://github.com/google/docsy-example.git   Run hugo server in the site root directory. By default your site will be available at http://localhost:1313/. Now that you\u0026rsquo;re serving your site locally, Hugo will watch for changes to the content and automatically refresh your site.\n  Continue with the usual GitHub workflow to edit files, commit them, push the changes up to your fork, and create a pull request.\n  Creating an issue If you\u0026rsquo;ve found a problem in the docs, but you\u0026rsquo;re not sure how to fix it yourself, please create an issue in the Science Toolkits repo. You can also create an issue about a specific page by clicking the Create Issue button in the top right hand corner of the page.\nUseful resources  [Docsy user guide](wherever it goes): All about Docsy, including how it manages navigation, look and feel, and multi-language support. Hugo documentation: Comprehensive reference for Hugo. Github Hello World!: A basic introduction to GitHub concepts and workflow.  ","excerpt":"These basic sample guidelines assume that your Docsy site is deployed using Netlify and your files …","ref":"/science-toolkit/docs/contribution-guidelines/","title":"Contribution Guidelines"},{"body":"","excerpt":"","ref":"/science-toolkit/docs/","title":"Documentation"},{"body":" This is a placeholder page. Replace it with your own content.\n Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.\n90\u0026rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps kale chips.\n There should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\n First Header 2 This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier craft beer. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven\u0026rsquo;t heard of them copper mug, crucifix green juice vape single-origin coffee brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!\nDeae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nScenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR\u0026amp;B. I love this life we live in.\nSecond Header 2  This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\n Header 3 This is a code block following a header. Next level leggings before they sold out, PBR\u0026amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.\nHeader 4  This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header.  Header 5  This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header.  Header 6    What Follows     A table A header   A table A header   A table A header     There\u0026rsquo;s a horizontal rule above and below this.\n And an ordered list:\n Michael Brecker Seamus Blake Branford Marsalis  And an unordered task list:\n Create a Hugo theme Add task lists to it Take a vacation  And a \u0026ldquo;mixed\u0026rdquo; task list:\n Pack bags ? Travel!  And a nested list:\n Jackson 5  Michael Tito Jackie Marlon Jermaine   TMNT  Leonardo Michelangelo Donatello Raphael    Definition lists can be used with Markdown syntax. Definition headers are bold.\n Name Godzilla Born 1952 Birthplace Japan Color Green   Tables should have bold headings and alternating shaded rows.\n   Artist Album Year     Michael Jackson Thriller 1982   Prince Purple Rain 1984   Beastie Boys License to Ill 1986    If a table is too wide, it should scroll horizontally.\n   Artist Album Year Label Awards Songs     Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin\u0026rsquo; Somethin\u0026rsquo;, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life   Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let\u0026rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I\u0026rsquo;m a Star, Purple Rain   Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026amp; Stealin, The New Style, She\u0026rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill     Code snippets like var foo = \u0026quot;bar\u0026quot;; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \u0026quot;bar\u0026quot;; bar := \u0026quot;foo\u0026quot;; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \u0026#34;bar\u0026#34;;` lexer := lexers.Get(\u0026#34;javascript\u0026#34;) iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\u0026#34;github\u0026#34;) formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026amp;buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\n   Language Code     Javascript var foo = \u0026quot;bar\u0026quot;;   Ruby foo = \u0026quot;bar\u0026quot;{     Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nThe photo above of the Spruce Picea abies shoot with foliage buds: Bjørn Erik Pedersen, CC-BY-SA.\nComponents Alerts  This is an alert.  Note This is an alert with a title.  Note This is an alert with a title and Markdown.  This is a successful alert.  This is a warning.  Warning This is a warning with a title.  Another Heading Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis Document Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam eripitur? Sitim noceat signa probat quidem. Sua longis fugatis quidem genae.\nPixel Count Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR\u0026amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.\nContact Info Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.\nExternal Links Stumptown PBR\u0026amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.\nThis is the final element on the page and there should be no margin below this. ","excerpt":"This is a placeholder page. Replace it with your own content.\n Text can be bold, italic, or …","ref":"/science-toolkit/docs/getting-started/example-page/","title":"Example Page"},{"body":"  #td-cover-block-0 { background-image: url(/science-toolkit/featured-background_hu8a944d267ae3eda7658be2b204e4ea37_687139_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/science-toolkit/featured-background_hu8a944d267ae3eda7658be2b204e4ea37_687139_1920x1080_fill_q75_catmullrom_top.jpg); } }  Welcome to Science Toolkit: An Open Source project to help Data Scientists! Learn More   Download   Porridge temperature assessment - in the cloud!\n\n        Science Toolkits provides a single web UI providing visibility into porridge temperature, chair size, and bed softness metrics! You can even find out who\u0026rsquo;s been eating your porridge.\n(Sadly, Science Toolkits isn\u0026rsquo;t a real project, but you can use this site as an example to create your own real websites with Docsy)\n      New chair metrics! The Science Toolkits UI now shows chair size metrics by default.\nPlease follow this space for updates!\n   Contributions welcome! We do a Pull Request contributions workflow on GitHub. New users are always welcome!\nRead more …\n   Follow us on Twitter! For announcement of latest features etc.\nRead more …\n     This is the second Section     --    Download from AppStore Get the Science Toolkits app!\n --   Contributions welcome! We do a Pull Request contributions workflow on GitLab. New users are always welcome!\nRead more …\n   Follow us on Twitter! For announcement of latest features etc.\nRead more …\n --     This is another Section     ","excerpt":"#td-cover-block-0 { background-image: …","ref":"/science-toolkit/","title":"Science Toolkits"},{"body":"","excerpt":"","ref":"/science-toolkit/index.json","title":""},{"body":"  #td-cover-block-0 { background-image: url(/science-toolkit/about/featured-background_hu8a944d267ae3eda7658be2b204e4ea37_687139_960x540_fill_q75_catmullrom_bottom.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/science-toolkit/about/featured-background_hu8a944d267ae3eda7658be2b204e4ea37_687139_1920x1080_fill_q75_catmullrom_bottom.jpg); } }  About Science Toolkits A sample site using the Docsy Hugo theme.        Science Toolkits is a sample site using the Docsy Hugo theme that shows what it can do and provides you with a template site structure. It’s designed for you to clone and edit as much as you like. See the different sections of the documentation and site for more ideas.     This is another section      This is another section     ","excerpt":"#td-cover-block-0 { background-image: …","ref":"/science-toolkit/about/","title":"About Science Toolkits"},{"body":"","excerpt":"","ref":"/science-toolkit/community/","title":"Community"},{"body":"","excerpt":"","ref":"/science-toolkit/search/","title":"Search Results"}]