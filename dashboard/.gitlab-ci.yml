release-dashboard:
  stage: semantic-release
  image: node:12
  before_script:
    - npm install --prefix dashboard
  script:
    - cd dashboard && npx semantic-release -e semantic-release-monorepo
  only:
    refs:
      - master
    changes:
      - dashboard/**/*

trivy:
  stage: test
  image: docker:stable
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    IMAGE_PROJECT_NAME: "terminus7/sci-toolkit-dashboard"
  before_script:
    - apk add --no-cache curl
    - export VERSION=$(curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $VERSION
    - wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
    - tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz
  allow_failure: true
  script:
    # Build image
    - docker build -t $IMAGE_PROJECT_NAME:test ./dashboard
    # Build report
    - ./trivy --exit-code 0 --cache-dir .trivycache/ --no-progress --format template --template "@contrib/gitlab.tpl" -o gl-container-scanning-report.json $IMAGE_PROJECT_NAME:test
    # Print report
    - ./trivy --exit-code 0 --cache-dir .trivycache/ --no-progress --severity HIGH $IMAGE_PROJECT_NAME:test
    # Fail on high and critical vulnerabilities
    - ./trivy --exit-code 1 --cache-dir .trivycache/ --severity CRITICAL --no-progress $IMAGE_PROJECT_NAME:test
  cache:
    paths:
      - .trivycache/
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
  only:
    changes:
      - dashboard/**/*

publish-dashboard-image:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  variables:
    IMAGE_PROJECT_NAME: "terminus7/sci-toolkit-dashboard"
    README_FILEPATH: "./dashboard/README.md"
  before_script:
    - apk add curl jq bash git coreutils --update
    - TAG=${CI_COMMIT_TAG#"dashboard-v"}
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - docker build -t $IMAGE_PROJECT_NAME:$TAG ./dashboard
    - docker tag $IMAGE_PROJECT_NAME:$TAG $IMAGE_PROJECT_NAME:latest
    - docker push $IMAGE_PROJECT_NAME:$TAG
    - docker push $IMAGE_PROJECT_NAME:latest
    - ./scripts/update-dockerhub-readme.sh
  after_script:
    - docker rmi $IMAGE_PROJECT_NAME:$TAG
  only:
    - /^dashboard-v\d*.\d*.\d*$/
